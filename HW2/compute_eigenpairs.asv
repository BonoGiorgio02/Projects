function [eigenvectors, eigenvalues] = compute_eigenpairs(A, num_eigenvalues)
% DEFLATION_INVERSE_POWER_METHOD Calcola i più piccoli autovalori e autovettori
% di una matrice usando il metodo della potenza inversa con deflazione.
%
% Input:
%   A - Matrice quadrata (semidefinita positiva).
%   num_eigenvalues - Numero di autovalori più piccoli da calcolare.
%
% Output:
%   eigenvectors - Matrice con gli autovettori come colonne.
%   eigenvalues - Vettore contenente gli autovalori.

    % Controllo se la matrice è quadrata
    [n, m] = size(A);
    if n ~= m
        error('La matrice A deve essere quadrata.');
    end

    % Preallocazione per autovalori e autovettori
    eigenvectors = zeros(n, num_eigenvalues);
    eigenvalues = zeros(n, num_eigenvalues);

    % Copia della matrice originale
    A_copy = A;

    for i = 1:num_eigenvalues
        % Trova l'autovalore più piccolo e il corrispondente autovettore
        [v, lambda] = inverse_power_method(A_copy);

        % Normalizza l'autovettore
        v = v / norm(v);

        % Salva i risultati
        eigenvectors(:, i) = v;
        eigenvalues(i) = lambda;

        % Deflazione: Aggiorna la matrice
        A_copy = A_copy - lambda * (v * v');

        % Assicurati che la matrice rimanga simmetrica
        A_copy = (A_copy + A_copy') / 2;
    end
end